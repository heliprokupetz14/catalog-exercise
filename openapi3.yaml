openapi: 3.0.1
info:
  title: catalog
  description: Geospatial Products Catalog
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

paths:
  /product/allProducts:
    get:
      tags:
        - General Operations
      summary: Returns a list of all the products with the offset of 100.
      operationId: getAllProducts

      responses:
        '200':
          description: Got a list of products.
        default:
          description: unexpected error
  /product/deleteProduct/{id}:
    delete:
      tags:
        - General Operations
      summary: Deletes a product based on the ID supplied.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: deleted
        default:
          description: unexpected error
  /product/updateProduct/{id}:
    put:
      tags:
        - General Operations
      summary: Updates a product based on the ID supplied.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: product response
        default:
          description: unexpected error

  /product/createProduct:
    post:
      tags:
        - General Operations
      summary: creates new product
      operationId: createProduct
      requestBody:
        required: true
        description: this is the schema for new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'

      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /product/getProduct/{field}/{operator}/{value}:
    get:
      tags:
        - Numeral Operations
      summary: Returns the products that have a {operator} numeral value in the specified field.
      operationId: getProduct
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
            enum:
              - resolution_best
              - min_zoom
              - max_zoom
        - name: operator
          in: path
          required: true
          schema:
            type: string
            enum:
              - Greater
              - GreaterEqual
              - Less
              - LessEqual
              - Equal
        - name: value
          in: path
          required: true
          schema:
            type: number

      responses:
        '200':
          description: product response
        default:
          description: unexpected error

  /product/getTextProduct/{field}/{operator}/{value}:
    get:
      tags:
        - Textual Operations
      summary: Returns the products that have a equal textual value (text) in the specified field.
      operationId: textualEqual
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
            enum:
              - name
              - description
              - consumption_link

        - name: operator
          in: path
          required: true
          schema:
            type: string
            enum:
              - Equal
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: product response
        default:
          description: unexpected error

  /product/equalType/type/{operator}/{enum}:
    get:
      tags:
        - Enum Operations
      summary: Returns the products with the same type.
      operationId: enumEqual
      parameters:
        - name: enum
          in: path
          required: true
          schema:
            type: string
            enum:
              - raster
              - rasterized vector
              - 3d tiles
              - QMesh
        - name: operator
          in: path
          required: true
          schema:
            type: string
            enum:
              - Equal
      responses:
        '200':
          description: product response
        default:
          description: unexpected error

  /product/equalConsumptionProtocol/protocol/{equal}/{enum}:
    get:
      tags:
        - Enum Operations
      summary: Returns the products with the same consumption protocol.
      operationId: enumEqual
      parameters:
        - name: enum
          in: path
          required: true
          schema:
            type: string
            enum:
              - WMS
              - WMTS
              - XYZ
              - 3D Tiles
        - name: operator
          in: path
          required: true
          schema:
            type: string
            enum:
              - Equal
      responses:
        '200':
          description: product response
        default:
          description: unexpected error

  /product/postPolygon:
    post:
      tags:
        - Geo-Shape Operations
      summary: Query products by polygon
      operationId: postPolygon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operator:
                  type: string
                  enum: ['contains', 'within', 'intersects']
                  description: The geographical operator (contains, within, intersects)
                value:
                  $ref: '#/components/schemas/boundingPolygon'

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example: { message: 'Query successful', results: [] }
        '400':
          description: Bad Request
          content:
            application/json:
              example: { message: 'Invalid request body' }

tags:
  - name: General Operations
    description: General CRUD Operations.
  - name: Numeral Operations
    description: Get the wanted products by field and inputed numeral value.
  - name: Textual Operations
    description: Get the wanted products by field and inputed textual value.
  - name: Enum Operations
    description: Get the wanted products by either type or consumption protocol.
  - name: Geo-Shape Operations
    description: Get the wanted products by geo-shape.

components:
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    boundingPolygon:
      type: object
      properties:
        type:
          type: string
          enum: ['Polygon']
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: number
      description: The geographical value (Polygon)

    product:
      type: object
      required:
        - name
        - description
        - boundingPolygon
        - consumtionLink
        - type
        - consumptionProtocol
        - resolutionBest
        - minZoom
        - maxZoom
      properties:
        name:
          type: string
          maximum: 48
        description:
          type: string
        boundingPolygon:
          $ref: '#/components/schemas/boundingPolygon'
        consumtionLink:
          type: string
        type:
          type: string
          enum: [raster, rasterizedvector, tile3d, QMesh]
        consumptionProtocol:
          type: string
          enum: [WMS, WMTC, XYZ, Tiels3D]
        resolutionBest:
          type: number
        minZoom:
          type: number
        maxZoom:
          type: number



    Polygon:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point3D'
    Point3D:
      type: array
      description: Point in 3D space
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      minItems: 2
      maxItems: 3
      items:
        type: number
